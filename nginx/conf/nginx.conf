user nginx;
worker_processes auto;
worker_rlimit_nofile 100000;

error_log  /var/log/nginx/error.log warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    server_tokens off;
    sendfile off;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 300;
    send_timeout 300;
    client_body_timeout 300;
    client_header_timeout 300;
    add_header x-frame-options "DENY";
    add_header x-content-type-options "nosniff";
    add_header x-xss-protection "1; mode=block";
    add_header strict-transport-security "max-age=31536000; includeSubDomains";


    access_log  /var/log/nginx/access.log;
    rewrite_log on;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    gzip  on;
    gzip_vary on;
    gzip_proxied any;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain
         text/xml
         text/css
         text/javascript
         image/gif
         image/png
         image/jpeg
         audio/mpeg
         video/mp4
         video/mpeg
         application/javascript
         application/x-javascript
         application/json
         application/xml
         application/xml+rss
         application/font-woff
         application/font-tff
         application/octet-stream;

    include /etc/nginx/conf.d/*.conf;
    error_page   500 502 503 504  /50x.html;
    limit_req_zone $binary_remote_addr zone=lrz:10m rate=2r/s;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream backend {
        keepalive 100;
        server back-app:8080;
    }

    upstream frontend {
        keepalive 1000;
        server web:3000;
    }

    server {
        listen 80 default_server;

        location ^~ /.well-known {
            root  /usr/share/nginx/html/;
        }
        location /ads.txt {
            alias  /usr/share/nginx/html/ads.txt;
        }
        location /robots.txt {
            alias /usr/share/nginx/html/robots/robots.txt;
        }
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443;
        ssl on;
        ssl_certificate /etc/letsencrypt/live/fine-look.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/fine-look.net/privkey.pem;
        server_name fine-look.net www.fine-look.net;

        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header forwarded "proxy_forwarded;secret=\"DANISA BC\"";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 300;
        proxy_send_timeout 300;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_upgrade;
        proxy_cache_bypass $http_upgrade;

        location /robots.txt {
            alias /usr/share/nginx/html/robots/robots.txt;
        }

        location /tmp-video {
            root /usr/share/nginx/html;
        }

        location /socket.io {
            proxy_pass http://backend;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location / {
            limit_req zone=lrz burst=5 nodelay;
            proxy_pass http://frontend;
        }

        location /api {
            proxy_pass http://backend;
            limit_req zone=lrz burst=5 nodelay;
        }

        location = /50x.html {
            root  /usr/share/nginx/html;
        }
    }
}